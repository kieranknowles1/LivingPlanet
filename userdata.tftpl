#!/bin/bash
# Script to configure a new instance with a LAMP stack, and download the app code

APACHE_USER=www-data

# Exit on error
# Error on undefined variable
# Error on piped command error
# This ensures bash will fail-fast and not try to continue on error
set -eu -o pipefail

sudo apt-get update
sudo apt-get install -y \
    composer \
    unzip \
    apache2 \
    php php-gd \
    php-mbstring

# mod_expires is not enabled by default and is needed to set cache headers
sudo a2enmod expires

# Cache static files for 1 year
echo "ExpiresActive On" | sudo tee /etc/apache2/conf-available/expires.conf
echo "ExpiresByType text/css \"access plus 1 year\"" | sudo tee -a /etc/apache2/conf-available/expires.conf
echo "ExpiresByType text/html \"access plus 1 year\"" | sudo tee -a /etc/apache2/conf-available/expires.conf
echo "ExpiresByType application/javascript \"access plus 1 year\"" | sudo tee -a /etc/apache2/conf-available/expires.conf

sudo a2enconf expires

# Apply config changes
sudo systemctl restart apache2

# Open local firewall to web traffic
sudo ufw allow http
sudo ufw allow https

# https://stackoverflow.com/questions/8684609/where-can-i-find-php-ini
inipath=$(php -i | grep /.+/php.ini -oE)

# Configure PHP
sudo sed -i 's/file_uploads = Off/file_uploads = On/' $inipath
sudo sed -i 's/allow_url_fopen = Off/allow_url_fopen = On/' $inipath
sudo sed -i 's/upload_max_filesize = .*$/upload_max_filesize = 64M/g' $inipath
sudo sed -i 's/memory_limit = .*$/memory_limit = 256M/g' $inipath

# Enable .htaccess files
sudo sed -i '/<Directory \/var\/www\/>/,/<\/Directory>/ s/AllowOverride None/AllowOverride All/' /etc/apache2/apache2.conf
sudo service apache2 restart

# Expose API keys to PHP
sudo echo "SetEnv OPENWEATHER_API_KEY ${openweather_api_key}" | sudo tee /etc/apache2/conf-enabled/openweather-api-key.conf
sudo chmod 777 /etc/apache2/conf-enabled/openweather-api-key.conf

# Issue an SSL certificate. Certbot automatically configures Apache to upgrade all HTTP traffic to HTTPS
sudo snap install --classic certbot

sudo certbot --apache -d "${domain}" --email "${email}" --agree-tos --non-interactive

# Install a cron job to renew the certificate
echo "0 12 1 * * root $(which certbot) renew --quiet" | sudo tee -a /etc/cron.d/certbot
